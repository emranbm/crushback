# Default values for crushback-metrics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

sqlExporterConfig:
  config.yaml: |
    global:
      # Subtracted from Prometheus' scrape_timeout to give us some headroom and prevent Prometheus from
      # timing out first.
      scrape_timeout_offset: 500ms
      # Minimum interval between collector runs: by default (0s) collectors are executed on every scrape.
      min_interval: 60s
      # Maximum number of open connections to any one target. Metric queries will run concurrently on
      # multiple connections.
      max_connections: 3
      # Maximum number of idle connections to any one target.
      max_idle_connections: 3

    # The target to monitor and the list of collectors to execute on it.
    target:
      # Data source name always has a URI schema that matches the driver name. In some cases (e.g. MySQL)
      # the schema gets dropped or replaced to match the driver expected DSN format.
      data_source_name: 'postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}'

      # Collectors (referenced by name) to execute on the target.
      collectors:
        - metrics:
          - metric_name: crushback_users_total
            type: counter
            help: 'Total number of users registered at Crushback.'
            key_labels: [] # Populated from the corresponding column of each row.
            static_labels: {}
            values: [count]
            query: "select count(*) as count from main_user"

image:
  repository: githubfree/sql_exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  command:
    - sql_exporter
    - -config.file
    - /sql_exporter_config/config.yaml
    - -logtostderr

database:
  host: postgresql
  port: 5432
  name: crushback_db
  user: root
  password: dummy

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  cpu: 150m
  memory: 128Mi
  ephemeral-storage: 100Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
